{
  "version": 3,
  "sources": ["../node_modules/hi-base32/src/base32.js", "../src/index.tsx", "../src/util/totp.ts"],
  "sourcesContent": ["/*\n * [hi-base32]{@link https://github.com/emn178/hi-base32}\n *\n * @version 0.5.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.HI_BASE32_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  }\n  var COMMON_JS = !root.HI_BASE32_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var BASE32_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'.split('');\n  var BASE32_DECODE_CHAR = {\n    'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7, 'I': 8,\n    'J': 9, 'K': 10, 'L': 11, 'M': 12, 'N': 13, 'O': 14, 'P': 15, 'Q': 16,\n    'R': 17, 'S': 18, 'T': 19, 'U': 20, 'V': 21, 'W': 22, 'X': 23, 'Y': 24,\n    'Z': 25, '2': 26, '3': 27, '4': 28, '5': 29, '6': 30, '7': 31\n  };\n\n  var blocks = [0, 0, 0, 0, 0, 0, 0, 0];\n\n  var throwInvalidUtf8 = function (position, partial) {\n    if (partial.length > 10) {\n      partial = '...' + partial.substr(-10);\n    }\n    var err = new Error('Decoded data is not valid UTF-8.'\n      + ' Maybe try base32.decode.asBytes()?'\n      + ' Partial data after reading ' + position + ' bytes: ' + partial + ' <-');\n    err.position = position;\n    throw err;\n  };\n\n  var toUtf8String = function (bytes) {\n    var str = '', length = bytes.length, i = 0, followingChars = 0, b, c;\n    while (i < length) {\n      b = bytes[i++];\n      if (b <= 0x7F) {\n        str += String.fromCharCode(b);\n        continue;\n      } else if (b > 0xBF && b <= 0xDF) {\n        c = b & 0x1F;\n        followingChars = 1;\n      } else if (b <= 0xEF) {\n        c = b & 0x0F;\n        followingChars = 2;\n      } else if (b <= 0xF7) {\n        c = b & 0x07;\n        followingChars = 3;\n      } else {\n        throwInvalidUtf8(i, str);\n      }\n\n      for (var j = 0; j < followingChars; ++j) {\n        b = bytes[i++];\n        if (b < 0x80 || b > 0xBF) {\n          throwInvalidUtf8(i, str);\n        }\n        c <<= 6;\n        c += b & 0x3F;\n      }\n      if (c >= 0xD800 && c <= 0xDFFF) {\n        throwInvalidUtf8(i, str);\n      }\n      if (c > 0x10FFFF) {\n        throwInvalidUtf8(i, str);\n      }\n\n      if (c <= 0xFFFF) {\n        str += String.fromCharCode(c);\n      } else {\n        c -= 0x10000;\n        str += String.fromCharCode((c >> 10) + 0xD800);\n        str += String.fromCharCode((c & 0x3FF) + 0xDC00);\n      }\n    }\n    return str;\n  };\n\n  var decodeAsBytes = function (base32Str) {\n    if (base32Str === '') {\n      return [];\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    base32Str = base32Str.replace(/=/g, '');\n    var v1, v2, v3, v4, v5, v6, v7, v8, bytes = [], index = 0, length = base32Str.length;\n\n    // 4 char to 3 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n      bytes[index++] = (v7 << 5 | v8) & 255;\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n    }\n    return bytes;\n  };\n\n  var encodeAscii = function (str) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = str.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i++);\n      v5 = str.charCodeAt(i++);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encodeUtf8 = function (str) {\n    var v1, v2, v3, v4, v5, code, end = false, base32Str = '',\n      index = 0, i, start = 0, bytes = 0, length = str.length;\n      if (str === '') {\n        return base32Str;\n      }\n    do {\n      blocks[0] = blocks[5];\n      blocks[1] = blocks[6];\n      blocks[2] = blocks[7];\n      for (i = start; index < length && i < 5; ++index) {\n        code = str.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i++] = code;\n        } else if (code < 0x800) {\n          blocks[i++] = 0xc0 | (code >> 6);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i++] = 0xe0 | (code >> 12);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++index) & 0x3ff));\n          blocks[i++] = 0xf0 | (code >> 18);\n          blocks[i++] = 0x80 | ((code >> 12) & 0x3f);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        }\n      }\n      bytes += i - start;\n      start = i - 5;\n      if (index === length) {\n        ++index;\n      }\n      if (index > length && i < 6) {\n        end = true;\n      }\n      v1 = blocks[0];\n      if (i > 4) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        v5 = blocks[4];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n          BASE32_ENCODE_CHAR[v5 & 31];\n      } else if (i === 1) {\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n          '======';\n      } else if (i === 2) {\n        v2 = blocks[1];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n          '====';\n      } else if (i === 3) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n          '===';\n      } else {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n          '=';\n      }\n    } while (!end);\n    return base32Str;\n  };\n\n  var encodeBytes = function (bytes) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = bytes.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i++];\n      v5 = bytes[i++];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = bytes[i++];\n      v2 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encode = function (input, asciiOnly) {\n    var notString = typeof(input) !== 'string';\n    if (notString && input.constructor === ArrayBuffer) {\n      input = new Uint8Array(input);\n    }\n    if (notString) {\n      return encodeBytes(input);\n    } else if (asciiOnly) {\n      return encodeAscii(input);\n    } else {\n      return encodeUtf8(input);\n    }\n  };\n\n  var decode = function (base32Str, asciiOnly) {\n    if (!asciiOnly) {\n      return toUtf8String(decodeAsBytes(base32Str));\n    }\n    if (base32Str === '') {\n      return '';\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    var v1, v2, v3, v4, v5, v6, v7, v8, str = '', length = base32Str.indexOf('=');\n    if (length === -1) {\n      length = base32Str.length;\n    }\n\n    // 8 char to 5 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255) +\n        String.fromCharCode((v7 << 5 | v8) & 255);\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255);\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255);\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255);\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255);\n    }\n    return str;\n  };\n\n  var exports = {\n    encode: encode,\n    decode: decode\n  };\n  decode.asBytes = decodeAsBytes;\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.base32 = exports;\n    if (AMD) {\n      define(function() {\n        return exports;\n      });\n    }\n  }\n})();\n", "import {\n  Action,\n  ActionPanel,\n  Form,\n  Icon,\n  List,\n  showToast,\n  useNavigation,\n  getPreferenceValues,\n  LocalStorage,\n  Toast,\n} from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { decode } from \"hi-base32\";\nimport { Algorithm, Digits, generateTOTP, isValidAlgorithm, isValidDigit, Options } from \"./util/totp\";\nimport { URL } from \"url\";\n\nconst DEFAULT_OPTIONS: Options = {\n  digits: 6,\n  algorithm: \"SHA1\",\n  period: 30,\n};\n\nexport default function AppsView() {\n  const [apps, setApps] = useState<\n    {\n      name: string;\n      key: string;\n      code: string;\n      percent: number;\n      time: string;\n    }[]\n  >([]);\n  const { defaultAction } = getPreferenceValues();\n\n  async function updateApps() {\n    const _apps = await LocalStorage.allItems();\n    setApps(\n      Object.keys(_apps)\n        .sort((a, b) => a.localeCompare(b))\n        .map((name) => {\n          const token: { secret: string; options: Options } = parse(_apps[name]);\n          return {\n            name,\n            key: _apps[name].toString(),\n            time: `${Math.floor(token.options.period - ((new Date().getTime() / 1000) % token.options.period))}`,\n            percent:\n              (Math.floor(token.options.period - ((new Date().getTime() / 1000) % token.options.period)) /\n                token.options.period) *\n              100,\n            code: generateTOTP(token.secret, token.options).toString().padStart(token.options.digits, \"0\"),\n          };\n        })\n    );\n  }\n\n  useEffect(() => {\n    updateApps();\n    setInterval(() => {\n      updateApps();\n    }, 100);\n  }, []);\n\n  return (\n    <List\n      actions={\n        <ActionPanel>\n          <Action.Push\n            icon={Icon.Plus}\n            title=\"Add App\"\n            target={<AddForm />}\n            shortcut={{ modifiers: [\"cmd\"], key: \"enter\" }}\n          />\n          <Action.Push\n            icon={Icon.Link}\n            title=\"Add App By URL\"\n            target={<AddAppByUrlForm />}\n            shortcut={{ modifiers: [\"cmd\"], key: \"u\" }}\n          />\n        </ActionPanel>\n      }\n    >\n      {apps.map((a) => (\n        <List.Item\n          title={a.name}\n          subtitle={a.code}\n          key={a.name}\n          accessories={[\n            {\n              icon: {\n                source:\n                  +a.percent > 75\n                    ? Icon.CircleProgress100\n                    : +a.percent > 50\n                    ? Icon.CircleProgress75\n                    : +a.percent > 25\n                    ? Icon.CircleProgress50\n                    : +a.time > 0\n                    ? Icon.CircleProgress25\n                    : Icon.Circle,\n              },\n              tooltip: a.time,\n            },\n          ]}\n          actions={\n            <ActionPanel>\n              <ActionPanel.Section>\n                {defaultAction == \"copy\" ? (\n                  <>\n                    <Action.CopyToClipboard content={a.code} title=\"Copy Code\" />\n                    <Action.Paste content={a.code} title=\"Paste Code\" />\n                  </>\n                ) : (\n                  <>\n                    <Action.Paste content={a.code} title=\"Paste Code\" />\n                    <Action.CopyToClipboard content={a.code} title=\"Copy Code\" />\n                  </>\n                )}\n              </ActionPanel.Section>\n              <ActionPanel.Section>\n                <Action.Push\n                  icon={Icon.Plus}\n                  title=\"Add App\"\n                  target={<AddForm />}\n                  shortcut={{ modifiers: [\"cmd\"], key: \"enter\" }}\n                />\n                <Action.Push\n                  icon={Icon.Link}\n                  title=\"Add App By URL\"\n                  target={<AddAppByUrlForm />}\n                  shortcut={{ modifiers: [\"cmd\"], key: \"u\" }}\n                />\n              </ActionPanel.Section>\n              <ActionPanel.Section>\n                <Action\n                  icon={Icon.Trash}\n                  title=\"Remove App\"\n                  onAction={async () => {\n                    await LocalStorage.removeItem(a.name);\n\n                    await updateApps();\n                  }}\n                  shortcut={{\n                    modifiers: [\"ctrl\"],\n                    key: \"return\",\n                  }}\n                />\n              </ActionPanel.Section>\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n}\n\nfunction AddForm() {\n  const { push } = useNavigation();\n\n  const onSubmit = async (e: Record<string, Form.Value>) => {\n    const values = e as { name?: string; secret?: string; digits: Digits; period: number; algorithm: Algorithm };\n\n    if (!values.name || !values.secret) {\n      showToast(Toast.Style.Failure, \"Please provide both fields\");\n      return;\n    }\n\n    values.secret = values.secret.replace(/[-\\s]/g, \"\").toUpperCase();\n\n    if (await LocalStorage.getItem(values.name)) {\n      showToast(Toast.Style.Failure, \"This app name is already taken\");\n      return;\n    }\n\n    try {\n      decode.asBytes(values.secret);\n    } catch {\n      showToast(Toast.Style.Failure, \"Invalid 2FA secret\");\n      return;\n    }\n\n    if (isNaN(values.period)) {\n      showToast(Toast.Style.Failure, \"Period should be a number\");\n      return;\n    }\n\n    if (+values.period <= 0) {\n      showToast(Toast.Style.Failure, \"Period should be positive number\");\n      return;\n    }\n\n    const options: Options = { digits: values.digits, period: values.period, algorithm: values.algorithm };\n\n    await LocalStorage.setItem(values.name, JSON.stringify({ secret: values.secret, options: options }));\n\n    push(<AppsView />);\n  };\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm icon={Icon.Plus} title=\"Submit\" onSubmit={onSubmit} />\n        </ActionPanel>\n      }\n    >\n      <Form.TextField id=\"name\" title=\"App Name\" placeholder=\"e.g. GitHub\" />\n      <Form.TextField id=\"secret\" title=\"2FA Secret\" placeholder=\"Get this from your provider\" />\n      <Form.TextField\n        id=\"period\"\n        title=\"Period\"\n        placeholder=\"A period that a TOTP code will be valid for\"\n        defaultValue=\"30\"\n      />\n      <Form.Dropdown id=\"digits\" title=\"Digits count\" defaultValue=\"6\">\n        <Form.Dropdown.Item title=\"6\" value=\"6\" />\n        <Form.Dropdown.Item title=\"7\" value=\"7\" />\n        <Form.Dropdown.Item title=\"8\" value=\"8\" />\n      </Form.Dropdown>\n      <Form.Dropdown id=\"algorithm\" title=\"Algorithm\" defaultValue=\"SHA1\">\n        <Form.Dropdown.Item title=\"SHA1\" value=\"SHA1\" />\n        <Form.Dropdown.Item title=\"SHA256\" value=\"SHA256\" />\n        <Form.Dropdown.Item title=\"SHA512\" value=\"SHA512\" />\n      </Form.Dropdown>\n    </Form>\n  );\n}\n\nfunction AddAppByUrlForm() {\n  const { push } = useNavigation();\n\n  const onSubmit = async (e: Record<string, Form.Value>) => {\n    const { url } = e as { url?: string };\n\n    if (!url) {\n      showToast(Toast.Style.Failure, \"Please provide both fields\");\n      return;\n    }\n\n    try {\n      const parse = new URL(url);\n      if (parse.protocol != \"otpauth:\") {\n        showToast(Toast.Style.Failure, \"Unsupported protocol \" + parse.protocol);\n        return;\n      }\n      if (parse.host != \"totp\") {\n        showToast(Toast.Style.Failure, \"Unsupported type \" + parse.host + \" only TOTP supported\");\n        return;\n      }\n\n      if (!parse.pathname) {\n        showToast(Toast.Style.Failure, \"Label is missing\");\n        return;\n      }\n\n      const name = decodeURIComponent(parse.pathname.slice(1));\n      const searchParams = parse.searchParams;\n      const secret = searchParams.get(\"secret\");\n      const algorithm = searchParams.get(\"algorithm\") ? searchParams.get(\"algorithm\") : DEFAULT_OPTIONS.algorithm;\n      const maybePeriod = searchParams.get(\"period\");\n      const period = maybePeriod ? parseInt(maybePeriod) : DEFAULT_OPTIONS.period;\n      const digits = searchParams.get(\"digits\") ? searchParams.get(\"digits\") : DEFAULT_OPTIONS.digits;\n\n      if (!secret) {\n        showToast(Toast.Style.Failure, \"Secret is mandatory\");\n        return;\n      }\n\n      try {\n        decode.asBytes(secret);\n      } catch {\n        showToast(Toast.Style.Failure, \"Invalid 2FA secret\");\n        return;\n      }\n\n      if (!isValidAlgorithm(algorithm)) {\n        showToast(Toast.Style.Failure, \"Unsupported hashing algorithm \" + algorithm);\n        return;\n      }\n\n      if (isNaN(period)) {\n        showToast(Toast.Style.Failure, \"Period should be a number\");\n        return;\n      }\n\n      if (+period <= 0) {\n        showToast(Toast.Style.Failure, \"Period should be positive number\");\n        return;\n      }\n\n      if (!isValidDigit(digits)) {\n        showToast(Toast.Style.Failure, \"Unsupported digits \" + digits);\n        return;\n      }\n\n      const options: Options = { digits: digits, period: period, algorithm: algorithm };\n\n      await LocalStorage.setItem(name, JSON.stringify({ secret: secret, options: options }));\n\n      push(<AppsView />);\n    } catch (e) {\n      showToast(Toast.Style.Failure, \"Unable to parse URL\");\n      return;\n    }\n    push(<AppsView />);\n  };\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm title=\"Submit\" onSubmit={onSubmit} />\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea\n        id=\"url\"\n        title=\"Otpauth URL\"\n        placeholder=\"e.g. otpauth://totp/Example:alice@google.com?secret=JBSWY3DPEHPK3PXP&issuer=Example\"\n      />\n    </Form>\n  );\n}\n\nfunction parse(value: string): { secret: string; options: Options } {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return { secret: value, options: DEFAULT_OPTIONS };\n  }\n}\n", "import { createHmac } from \"crypto\";\n\nimport { decode } from \"hi-base32\";\n\nconst AllDigits = [6, 7, 8] as const;\nexport type Digits = (typeof AllDigits)[number];\nconst Algorithms = [\"SHA1\", \"SHA256\", \"SHA512\"] as const;\nexport type Algorithm = (typeof Algorithms)[number];\n\nexport interface Options {\n  period: number;\n  digits: Digits;\n  algorithm: Algorithm;\n}\n\nexport function isValidAlgorithm(alg: unknown): alg is Algorithm {\n  return !!Algorithms.find((validAlg) => validAlg === alg);\n}\n\nexport function isValidDigit(digit: unknown): digit is Digits {\n  return !!AllDigits.find((validDigit) => validDigit == digit);\n}\n\n/**\n * Performs the hash step of HOTP\n * @param key The secret key\n * @param count The count value\n * @param algorithm The algorithm value\n */\nfunction hash(key: Buffer, count: bigint, algorithm: string): Buffer {\n  const mac = createHmac(algorithm, key);\n\n  const data = Buffer.alloc(8);\n  data.writeBigInt64BE(count);\n\n  mac.update(data);\n\n  return mac.digest();\n}\n\nfunction truncate(input: Buffer, digits: number): number {\n  const offset = input[input.length - 1] & 0xf;\n\n  const p = input.slice(offset, offset + 4);\n\n  return (p.readUInt32BE() & 0x7fffffff) % Math.pow(10, digits);\n}\n\nexport function generateTOTP(key: string, options: Options): number {\n  const time = Math.floor(new Date().getTime() / 1000 / options.period);\n\n  const decodedKey = decode.asBytes(key.toUpperCase());\n\n  const code = truncate(hash(Buffer.from(decodedKey), BigInt(time), options.algorithm), options.digits);\n\n  return code;\n}\n"],
  "mappings": "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",
  "names": ["require_base32", "__commonJSMin", "exports", "module", "root", "NODE_JS", "COMMON_JS", "AMD", "BASE32_ENCODE_CHAR", "BASE32_DECODE_CHAR", "blocks", "throwInvalidUtf8", "position", "partial", "err", "toUtf8String", "bytes", "str", "length", "i", "followingChars", "b", "j", "decodeAsBytes", "base32Str", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "index", "count", "remain", "encodeAscii", "encodeUtf8", "code", "end", "start", "encodeBytes", "encode", "input", "asciiOnly", "notString", "decode", "src_exports", "__export", "AppsView", "__toCommonJS", "import_api", "import_react", "import_hi_base32", "import_crypto", "import_hi_base32", "AllDigits", "Algorithms", "isValidAlgorithm", "alg", "validAlg", "isValidDigit", "digit", "validDigit", "hash", "key", "count", "algorithm", "mac", "data", "truncate", "input", "digits", "offset", "generateTOTP", "options", "time", "decodedKey", "import_url", "import_jsx_runtime", "DEFAULT_OPTIONS", "AppsView", "apps", "setApps", "defaultAction", "updateApps", "_apps", "b", "name", "token", "parse", "generateTOTP", "AddForm", "AddAppByUrlForm", "a", "push", "onSubmit", "e", "values", "options", "url", "searchParams", "secret", "algorithm", "maybePeriod", "period", "digits", "isValidAlgorithm", "isValidDigit", "value"]
}
