{
  "version": 3,
  "sources": ["../src/index.tsx"],
  "sourcesContent": ["import { useState, useEffect } from \"react\";\nimport { ActionPanel, Detail, List, Action, Icon, showToast, Toast, Clipboard } from \"@raycast/api\";\nimport { exec } from \"child_process\";\n\nconst DetailPassword = ({\n  networkName,\n  setIsLoading,\n}: {\n  networkName: string;\n  setIsLoading: (loading: boolean) => void;\n}) => {\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      const toast = await showToast({ style: Toast.Style.Animated, title: \"Permission Checking\" });\n\n      exec(\n        `security find-generic-password -D \"AirPort network password\" -a \"${networkName}\" -w`,\n        async (error, password, stderr) => {\n          if (error) {\n            console.error(`exec error: ${error}`);\n\n            toast.style = Toast.Style.Failure;\n            toast.title = \"Permission checked failed \u274C\";\n            toast.message = error.message;\n\n            setIsLoading(false);\n            return;\n          }\n\n          // Trigger open raycast app\n          exec(\"open /Applications/Raycast.app\", (error, stdout, stderr) => {\n            toast.style = Toast.Style.Success;\n            toast.title = \"Permission checked successed \u2705\";\n\n            setPassword(password.trim());\n            setIsLoading(false);\n          });\n        }\n      );\n    })();\n  }, []);\n\n  return (\n    <Detail\n      markdown={`\n  ## Wifi Name \uD83D\uDCF6\n  ${networkName}\n  ## Password \uD83D\uDD11\n  ${password}\n  `}\n      actions={\n        <ActionPanel>\n          <Action.CopyToClipboard content={password} shortcut={{ modifiers: [\"cmd\"], key: \".\" }} />\n        </ActionPanel>\n      }\n    />\n  );\n};\n\nexport default function Command() {\n  const [networks, setNetworks] = useState<Array<string>>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    exec(\"/usr/sbin/networksetup -listpreferredwirelessnetworks en0\", (error, stdout, stderr) => {\n      if (error) {\n        console.error(`exec error: ${error}`);\n        setIsLoading(false);\n        return;\n      }\n\n      const lines = stdout.trim().split(\"\\n\");\n\n      // Extract the Wi-Fi network names from the lines\n      const networks = lines.slice(1).map((line) => line.trim());\n\n      if (networks?.length > 0) {\n        setNetworks(networks);\n      }\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <List isLoading={isLoading}>\n      {networks.map((network, index) => (\n        <List.Item\n          key={index}\n          icon={Icon.Wifi}\n          title={network}\n          actions={\n            <ActionPanel>\n              <Action.Push\n                title=\"Show Details\"\n                target={<DetailPassword networkName={network} setIsLoading={setIsLoading} />}\n              />\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAoC,iBACpCC,EAAqF,wBACrFC,EAAqB,yBAFrBC,EAAA,6BAIMC,EAAiB,CAAC,CACtB,YAAAC,EACA,aAAAC,CACF,IAGM,CACJ,GAAM,CAACC,EAAUC,CAAW,KAAI,YAAS,EAAE,EAE3C,sBAAU,IAAM,EACb,SAAY,CACX,IAAMC,EAAQ,QAAM,aAAU,CAAE,MAAO,QAAM,MAAM,SAAU,MAAO,qBAAsB,CAAC,KAE3F,QACE,oEAAoEJ,QACpE,MAAOK,EAAOH,EAAUI,IAAW,CACjC,GAAID,EAAO,CACT,QAAQ,MAAM,eAAeA,GAAO,EAEpCD,EAAM,MAAQ,QAAM,MAAM,QAC1BA,EAAM,MAAQ,mCACdA,EAAM,QAAUC,EAAM,QAEtBJ,EAAa,EAAK,EAClB,MACF,IAGA,QAAK,iCAAkC,CAACI,EAAOE,EAAQD,IAAW,CAChEF,EAAM,MAAQ,QAAM,MAAM,QAC1BA,EAAM,MAAQ,sCAEdD,EAAYD,EAAS,KAAK,CAAC,EAC3BD,EAAa,EAAK,CACpB,CAAC,CACH,CACF,CACF,GAAG,CACL,EAAG,CAAC,CAAC,KAGH,OAAC,UACC,SAAU;AAAA;AAAA,IAEZD;AAAA;AAAA,IAEAE;AAAA,IAEE,WACE,OAAC,eACC,mBAAC,SAAO,gBAAP,CAAuB,QAASA,EAAU,SAAU,CAAE,UAAW,CAAC,KAAK,EAAG,IAAK,GAAI,EAAG,EACzF,EAEJ,CAEJ,EAEe,SAART,GAA2B,CAChC,GAAM,CAACe,EAAUC,CAAW,KAAI,YAAwB,CAAC,CAAC,EACpD,CAACC,EAAWT,CAAY,KAAI,YAAS,EAAK,EAEhD,sBAAU,IAAM,CACdA,EAAa,EAAI,KAEjB,QAAK,4DAA6D,CAACI,EAAOE,EAAQD,IAAW,CAC3F,GAAID,EAAO,CACT,QAAQ,MAAM,eAAeA,GAAO,EACpCJ,EAAa,EAAK,EAClB,MACF,CAKA,IAAMO,EAHQD,EAAO,KAAK,EAAE,MAAM;AAAA,CAAI,EAGf,MAAM,CAAC,EAAE,IAAKI,GAASA,EAAK,KAAK,CAAC,EAErDH,GAAU,OAAS,GACrBC,EAAYD,CAAQ,EAEtBP,EAAa,EAAK,CACpB,CAAC,CACH,EAAG,CAAC,CAAC,KAGH,OAAC,QAAK,UAAWS,EACd,SAAAF,EAAS,IAAI,CAACI,EAASC,OACtB,OAAC,OAAK,KAAL,CAEC,KAAM,OAAK,KACX,MAAOD,EACP,WACE,OAAC,eACC,mBAAC,SAAO,KAAP,CACC,MAAM,eACN,UAAQ,OAACb,EAAA,CAAe,YAAaa,EAAS,aAAcX,EAAc,EAC5E,EACF,GATGY,CAWP,CACD,EACH,CAEJ",
  "names": ["src_exports", "__export", "Command", "__toCommonJS", "import_react", "import_api", "import_child_process", "import_jsx_runtime", "DetailPassword", "networkName", "setIsLoading", "password", "setPassword", "toast", "error", "stderr", "stdout", "networks", "setNetworks", "isLoading", "line", "network", "index"]
}
