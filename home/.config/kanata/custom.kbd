(defcfg
  danger-enable-cmd yes       ;; enable kanata to execute commands
  delegate-to-first-layer yes ;; transparent keys(_) on layers will delegate to the first-layer instead of the defsrc
  process-unmapped-keys no    ;; Enable processing of keys that are not in defsrc.
  block-unmapped-keys no      ;; Disable all keys not mapped in defsrc.(process-unmapped-keys must be enabled)
  rapid-event-delay 5
)

;; the reduced ANSI 60% layout (39-key layout)
(defsrc
  tab    q    w    e    r    t         u    i    o    p   [     ]    ;; 12 keys
  caps   a    s    d    f    g         j    k    l    ;    '    ret  ;; 12 keys
  lsft   z    x    c    v    b         n    m    ,    .    /    rsft ;; 12 keys
             lmet                spc               rmet              ;; 3  keys
)

;; Aliases for keys accessible only via shifting
(defalias
  til S-grv exc S-1 ats S-2 oct S-3 dol S-4 per S-5 car S-6 amp S-7 ast S-8 pao S-9 pac S-0 und S-min plu S-eql
  btb S-tab                                                                                   cuo S-[ cuc S-] pip S-\
                                                                        ano S-comm anc S-. que S-/
)

(defvar
  tap-timeout   100
  hold-timeout  200
  one-shot-timeout 300

  ;; shortened vars
  tt $tap-timeout
  ht $hold-timeout
  ost $one-shot-timeout
)

(deftemplate shift-fork (key when-shifted-key)
  (fork $key (unshift $when-shifted-key) (lsft rsft))
)

(deftemplate shift-fork-alias (key when-shifted-alias)
  (fork $key $when-shifted-alias (lsft rsft))
)

(deftemplate fn-fork (key key-fn)
  (fork $key (unmod $key-fn) (fn))
)


;; TLTR activation
;; implementation 1
(defchords tl-tr 500
  (tl  ) (layer-while-held TL)
  (  tr) (layer-while-held TR)
  (tl tr) (layer-while-held TLTR)
)

(defalias
  tl (chord tl-tr tl)
  tr (chord tl-tr tr)
)

;;implementation 2
;; (defalias
;;   tl (switch
;;     (f22) (layer-while-held TLTR) break
;;     () (multi f21 (layer-while-held TL)) break
;;   )
;;   tr (switch
;;     (f21) (layer-while-held TLTR) break
;;     () (multi f22 (layer-while-held TR)) break
;;   )
;; )


(defalias
  delf (template-expand shift-fork bspc del)
  slaf (template-expand shift-fork / \)
  comf (template-expand shift-fork-alias comm @und)
  dotf (template-expand shift-fork-alias . @que)
)

#| first-layer
 Modded Colemak, i.e.,
 1. curl mod (mod dh)
 2. wide mod (shifting right hand keys to the right by one key)
 3. angle mod (placement of z in the middle)
|#
(deflayer COLEMAK-DH-ANGLE-WIDE
  tab      q    w    f    p    b        j    l    u    y     '     ;
  @delf    a    r    s    t    g        m    n    e    i     o     ret
  lsft     x    c    d    v    z      @slaf  k    h   @comf @dotf  rsft
                @tl               spc                 @tr
)


(defalias
  ;; sticky modifiers
  sMet (one-shot-release $ost lmet)
  sCtl (one-shot-release $ost lctl)
  sAlt (one-shot-release $ost lalt)
  sSft (one-shot-release $ost lsft)
  sFn (one-shot-release $ost fn)
  sWin (multi
    (one-shot-release $ost lmet)
    (one-shot-release $ost lctl)
    (one-shot-release $ost lalt)
  ) ;; window manager key (meant for window manipulation)
  sHyp (multi
    (one-shot-press $ost lmet)
    (one-shot-press $ost lctl)
    (one-shot-press $ost lalt)
    (one-shot-press $ost lsft)
  ) ;; hyper key (meant for application shortcuts)

  cw (caps-word-custom 3000
    (a b c d e f g h i j k l m n o p q r s t u v w x y z -)
    (1 2 3 4 5 6 7 8 9 0 left down up rght bspc del f21 f22)
  )

  ;; forks
  pguf (template-expand shift-fork pgup home)
  pgdf (template-expand shift-fork pgdn end)
)

;; TL (Thumb Left) layer (modifiers & navigation)
(deflayer TL
  _   esc   @sWin   XX     XX    XX      @pguf   @btb  up   tab   @cw     XX
  _   @sAlt @sCtl  @sSft  @sMet  XX      @pgdf  left  down  rght  rpt-any  _
  _    @sFn  XX    @sHyp   XX    XX        XX    XX   bspc   del   XX      _
                    _                 _                _
)


(defalias
  gra (unshift grv)

  ;; symbols' forks
  ampf (template-expand shift-fork-alias @amp @til)
  pipf (template-expand shift-fork-alias @pip @gra)

  ;; brackets' forks
  curf (template-expand shift-fork-alias @cuo @cuc)
  parf (template-expand shift-fork-alias @pao @pac)
  sqrf (template-expand shift-fork [ ])

  ;; funciton keys's fn-forks
  1f (template-expand fn-fork 1 f1)
  2f (template-expand fn-fork 2 f2)
  3f (template-expand fn-fork 3 f3)
  4f (template-expand fn-fork 4 f4)
  5f (template-expand fn-fork 5 f5)
  6f (template-expand fn-fork 6 f6)
  7f (template-expand fn-fork 7 f7)
  8f (template-expand fn-fork 8 f8)
  9f (template-expand fn-fork 9 f9)
  0f (template-expand fn-fork 0 f10)
  astf (template-expand fn-fork @ast f11)
  perf (template-expand fn-fork @per f12)
)

;; TR (Thumb Right) layer (symbols & numbers)
(deflayer TR
  _   @exc  @ats   @oct   @dol  @car        @perf  @7f   @8f   @9f   @plu  eql
  _   @ampf @pipf  @curf  @parf @sqrf      @astf  @4f   @5f   @6f   min    _
  _    XX   @ano  @anc    XX    XX         /     @0f   @1f   @2f   @3f    _
                     _                   _               XX
)


(defalias
  ;; Screen saver and sleep
  ssc (cmd /usr/local/bin/dash -c "/usr/bin/open -a ScreenSaverEngine")
  zzc (cmd /usr/local/bin/dash -c "/usr/bin/pmset sleepnow")
  scref (template-expand shift-fork-alias @ssc @zzc)

  ;; volume and media controls
  voldf (template-expand shift-fork vold mute)
  medif (template-expand shift-fork next prev)

  ;; Dynamic macro
  ;; dms dynamic-macro-record-stop
  ;; dst (dynamic-macro-record-stop-truncate 4)
  ;; dr (dynamic-macro-record 0)
  ;; dp (dynamic-macro-play 0)
  ;; dmr (tap-dance 200 (@dr @dst))
)

;; TLTR (Thumb Left & Thumb Right) layer (non-keyboard functions like mouse, media, etc.)
(deflayer TLTR
  _  @scref  brup    pp   volu  XX            XX   XX   XX   XX  XX   _
  _    XX     XX     XX    XX   XX            XX   XX   XX   XX  XX   _
  _  brdown @medif @voldf  XX   XX            XX   XX   XX   XX  XX   _
             XX                      lrld                  XX
)
